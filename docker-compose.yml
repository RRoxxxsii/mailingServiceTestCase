services:

  backend:
    build: .
    volumes:
      - .:/service
    command: bash -c "poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14.1-alpine
    restart: always
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3

  # Redis
  redis:
    image: redis:7.0.5-alpine
    container_name: redis

  # Worker
  celery:
    build: .
    command:  bash -c "celery -A celery_app.app worker --loglevel=info"
    volumes:
      - .:/service
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      backend:
        condition: service_started

volumes:
  db:
